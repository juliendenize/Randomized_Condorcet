<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (1.8.0_162) on Mon Apr 16 21:17:10 CEST 2018 -->
<title>Condorcet</title>
<meta name="date" content="2018-04-16">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
<script type="text/javascript" src="../script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="Condorcet";
        }
    }
    catch(err) {
    }
//-->
var methods = {"i0":10,"i1":10,"i2":9,"i3":10,"i4":10,"i5":10,"i6":10};
var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/Condorcet.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev&nbsp;Class</li>
<li><a href="../main/Graphe.html" title="class in main"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?main/Condorcet.html" target="_top">Frames</a></li>
<li><a href="Condorcet.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">main</div>
<h2 title="Class Condorcet" class="title">Class Condorcet</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>main.Condorcet</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<br>
<pre>public class <span class="typeNameLabel">Condorcet</span>
extends java.lang.Object</pre>
<div class="block"><b>La classe Condorcet représente une élection.</b>
 <p>Elle est définie par:
 <ul>
        <li>Le nombre d'alternatives du vote.</li>
        <li>Toutes les voix d'une élection.</li>
        <li>Le compteur des matchs entre toutes les alternatives</li>
        <li>Le gagnant de l'élection ou le "vainqueur de Condorcet"</li>
        <li>Le graphe des victoires des alternatives</li>
 </ul>
 </p><br></div>
<dl>
<dt><span class="simpleTagLabel">Author:</span></dt>
<dd>julien</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../test/CondorcetTest.html" title="class in test"><code>CondorcetTest</code></a></dd>
</dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Field and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private int[][]</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../main/Condorcet.html#compteurMatchs">compteurMatchs</a></span></code>
<div class="block"><b>Compte les résultats des matchs entre toutes les alternatives.</b><br>
 compteurMatchs[j][i] contient le nombre de fois que i est mieux classée que j.<br>
 Ce compteur est modifié lors du parcours de toutes les voix.<br></div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="../main/Graphe.html" title="class in main">Graphe</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../main/Condorcet.html#grapheAlternatives">grapheAlternatives</a></span></code>
<div class="block">Contient les victoires des alternatives sur les autres.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../main/Condorcet.html#nbAlternatives">nbAlternatives</a></span></code>
<div class="block">Le nombre d'alternatives du vote.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private java.util.LinkedList&lt;<a href="../main/Voix.html" title="class in main">Voix</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../main/Condorcet.html#toutesLesVoix">toutesLesVoix</a></span></code>
<div class="block">Toutes les voix d'une élection.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../main/Condorcet.html#vainqueur">vainqueur</a></span></code>
<div class="block">Contient l'id du vainqueur de Condorcet.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><span class="memberNameLink"><a href="../main/Condorcet.html#Condorcet-int-">Condorcet</a></span>(int&nbsp;nbAlternatives)</code>
<div class="block"><b>Constructeur Condorcet</b></div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../main/Condorcet.html#ajouterUneVoix-main.Voix-">ajouterUneVoix</a></span>(<a href="../main/Voix.html" title="class in main">Voix</a>&nbsp;voix)</code>
<div class="block">Ajoute une voix à toutesLesVoix.<br></div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>private void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../main/Condorcet.html#designerVainqueurRandomise-int:A-">designerVainqueurRandomise</a></span>(int[]&nbsp;nbMatchsGagnes)</code>
<div class="block">Dans le cas où un cycle est présent dans le graphe des victoires, <b>le vainqueur est choisie selon une probabilité.</b>
 La probabilité pour une alternative i d'être choisie est le nombre de matchs qu'elle a gagné sur le nombre de matchs gagnés totaux.</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>static int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../main/Condorcet.html#donnerNbAleatoire-int-int-">donnerNbAleatoire</a></span>(int&nbsp;nbMinimum,
                 int&nbsp;nbMaximum)</code>
<div class="block">Renvoie un nombre aléatoire.<br></div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../main/Condorcet.html#elireLeVainqueur--">elireLeVainqueur</a></span>()</code>
<div class="block"><b>Renvoie le vainqueur de l'élection représentant par l'instance de Condorcet.</b>
 La méthode regarde d'abord s'il y a un vainqueur de condorcet et si oui le retourne.<br>
 Sinon elle teste s'il y a un cycle dans le graphe des matchs, si oui le vainqueur est désigné par <a href="../main/Condorcet.html#designerVainqueurRandomise-int:A-"><code>designerVainqueurRandomise(int[])</code></a> et sinon par
 <a href="../main/VictoireParMatchs.html" title="class in main"><code>VictoireParMatchs</code></a>.<br></div>
</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>private void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../main/Condorcet.html#parcourirLesVoix--">parcourirLesVoix</a></span>()</code>
<div class="block"><b>Remplit le tableau compteur</b> en regardant pour chaque voix comment sont classées les alternatives pour matcher les candidats.</div>
</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>int[][]</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../main/Condorcet.html#retournerCompteur--">retournerCompteur</a></span>()</code>
<div class="block">Renvoie le tableau compteur<br></div>
</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../main/Condorcet.html#toString--">toString</a></span>()</code>
<div class="block">Comportement d'un objet Condorcet sous la forme d'une chaine de caractère.<br>
 Retourne le vainqueur de l'élection et le nombre d'alternatives.<br></div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a name="nbAlternatives">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>nbAlternatives</h4>
<pre>private&nbsp;int nbAlternatives</pre>
<div class="block">Le nombre d'alternatives du vote. Ce nombre n'est pas modifiable.</div>
</li>
</ul>
<a name="toutesLesVoix">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>toutesLesVoix</h4>
<pre>private&nbsp;java.util.LinkedList&lt;<a href="../main/Voix.html" title="class in main">Voix</a>&gt; toutesLesVoix</pre>
<div class="block">Toutes les voix d'une élection. Les voix s'ajoutent une à une dans cette liste chainée.<br></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../main/Voix.html" title="class in main"><code>Voix</code></a>, 
<a href="../main/Condorcet.html#ajouterUneVoix-main.Voix-"><code>ajouterUneVoix(Voix)</code></a></dd>
</dl>
</li>
</ul>
<a name="compteurMatchs">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>compteurMatchs</h4>
<pre>private&nbsp;int[][] compteurMatchs</pre>
<div class="block"><b>Compte les résultats des matchs entre toutes les alternatives.</b><br>
 compteurMatchs[j][i] contient le nombre de fois que i est mieux classée que j.<br>
 Ce compteur est modifié lors du parcours de toutes les voix.<br></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../main/Condorcet.html#parcourirLesVoix--"><code>parcourirLesVoix()</code></a></dd>
</dl>
</li>
</ul>
<a name="vainqueur">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>vainqueur</h4>
<pre>private&nbsp;int vainqueur</pre>
<div class="block">Contient l'id du vainqueur de Condorcet. Ce nombre est modifié lorsque le vainqueur est trouvé.<br></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../main/Condorcet.html#elireLeVainqueur--"><code>elireLeVainqueur()</code></a></dd>
</dl>
</li>
</ul>
<a name="grapheAlternatives">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>grapheAlternatives</h4>
<pre>public&nbsp;<a href="../main/Graphe.html" title="class in main">Graphe</a> grapheAlternatives</pre>
<div class="block">Contient les victoires des alternatives sur les autres. <br></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../main/Graphe.html" title="class in main"><code>Graphe</code></a></dd>
</dl>
</li>
</ul>
</li>
</ul>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="Condorcet-int-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>Condorcet</h4>
<pre>public&nbsp;Condorcet(int&nbsp;nbAlternatives)</pre>
<div class="block"><b>Constructeur Condorcet</b>
 <p>A la construction d'un objet Condorcet, le nombre d'alternative est fixé.<br>
 compteurMatchs est initialisé par un tableau nul à deux dimensions de taille nbAlternatives au carré.<br>
 vainqueur est initialisé à zéro, le graphe à null et toutesLesVoix par une liste chainée vide.<br></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>nbAlternatives</code> - Le nombre d'alternatives</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../main/Condorcet.html" title="class in main"><code>Condorcet</code></a>, 
<a href="../main/Condorcet.html#compteurMatchs"><code>compteurMatchs</code></a>, 
<a href="../main/Condorcet.html#nbAlternatives"><code>nbAlternatives</code></a>, 
<a href="../main/Condorcet.html#toutesLesVoix"><code>toutesLesVoix</code></a>, 
<a href="../main/Condorcet.html#vainqueur"><code>vainqueur</code></a></dd>
</dl>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="ajouterUneVoix-main.Voix-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>ajouterUneVoix</h4>
<pre>public&nbsp;void&nbsp;ajouterUneVoix(<a href="../main/Voix.html" title="class in main">Voix</a>&nbsp;voix)</pre>
<div class="block">Ajoute une voix à toutesLesVoix.<br></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>voix</code> - Une instance de Voix</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../main/Voix.html" title="class in main"><code>Voix</code></a>, 
<a href="../main/Condorcet.html#toutesLesVoix"><code>toutesLesVoix</code></a></dd>
</dl>
</li>
</ul>
<a name="parcourirLesVoix--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>parcourirLesVoix</h4>
<pre>private&nbsp;void&nbsp;parcourirLesVoix()</pre>
<div class="block"><b>Remplit le tableau compteur</b> en regardant pour chaque voix comment sont classées les alternatives pour matcher les candidats. <br>
 La méthode parcourt les voix. <br>
 Elle parcourt pour chaque voix le tableau classement en <b>comparant pour chaque alternative i son rang par rapport aux alternatives j</b> avec j > i. <br>
 Lorsque que le <b>rang de i est supérieur au rang de j elle incrémente compteur[j][i] de 1</b>. <br>
 Si le rang de i ou de j est égale à 0, elle ne fait rien car cela signifie que l'<b>alternative de rang 0 n'a pas été classée par le votant</b>.<br></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../main/Condorcet.html#toutesLesVoix"><code>toutesLesVoix</code></a>, 
<a href="../main/Condorcet.html#nbAlternatives"><code>nbAlternatives</code></a>, 
<a href="../main/Condorcet.html#compteurMatchs"><code>compteurMatchs</code></a>, 
<a href="../main/Voix.html#retournerRangAlternative-int-"><code>Voix.retournerRangAlternative(int)</code></a></dd>
</dl>
</li>
</ul>
<a name="retournerCompteur--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>retournerCompteur</h4>
<pre>public&nbsp;int[][]&nbsp;retournerCompteur()</pre>
<div class="block">Renvoie le tableau compteur<br></div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>renvoie le tableau compteur sous la forme d'un tableau d'entiers à deux dimensions.</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../test/CondorcetTest.html#testRetournerCompteur--"><code>CondorcetTest.testRetournerCompteur()</code></a></dd>
</dl>
</li>
</ul>
<a name="donnerNbAleatoire-int-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>donnerNbAleatoire</h4>
<pre>public static&nbsp;int&nbsp;donnerNbAleatoire(int&nbsp;nbMinimum,
                                    int&nbsp;nbMaximum)</pre>
<div class="block">Renvoie un nombre aléatoire.<br></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>nbMinimum</code> - Borne inférieur du nombre à renvoyer.</dd>
<dd><code>nbMaximum</code> - Borne supérieur du nombre.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>Renvoie le nombre aléatoire sous forme d'entier.</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../test/CondorcetTest.html#testDonnerNbAleatoire--"><code>CondorcetTest.testDonnerNbAleatoire()</code></a></dd>
</dl>
</li>
</ul>
<a name="designerVainqueurRandomise-int:A-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>designerVainqueurRandomise</h4>
<pre>private&nbsp;void&nbsp;designerVainqueurRandomise(int[]&nbsp;nbMatchsGagnes)</pre>
<div class="block">Dans le cas où un cycle est présent dans le graphe des victoires, <b>le vainqueur est choisie selon une probabilité.</b>
 La probabilité pour une alternative i d'être choisie est le nombre de matchs qu'elle a gagné sur le nombre de matchs gagnés totaux.
 La méthode choisie un nombre aléatoire entre 1 et le nombre de matchs gagnés au total.
 ELle somme le nombre de match gagnés pour chaque alternative jusqu'à arriver au nombre aléatoire ce qui désigne l'alternative gagnante.<br></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>nbMatchsGagnes</code> - </dd>
</dl>
</li>
</ul>
<a name="elireLeVainqueur--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>elireLeVainqueur</h4>
<pre>public&nbsp;int&nbsp;elireLeVainqueur()</pre>
<div class="block"><b>Renvoie le vainqueur de l'élection représentant par l'instance de Condorcet.</b>
 La méthode regarde d'abord s'il y a un vainqueur de condorcet et si oui le retourne.<br>
 Sinon elle teste s'il y a un cycle dans le graphe des matchs, si oui le vainqueur est désigné par <a href="../main/Condorcet.html#designerVainqueurRandomise-int:A-"><code>designerVainqueurRandomise(int[])</code></a> et sinon par
 <a href="../main/VictoireParMatchs.html" title="class in main"><code>VictoireParMatchs</code></a>.<br></div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd><b>Renvoie le vainqueur de l'élection sous la forme d'un entier.</b> Le +1 est dû au fait que les alternatives sont classées de 1 à nbAlternatives.</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../main/VictoireParMatchs.html" title="class in main"><code>VictoireParMatchs</code></a>, 
<a href="../main/Graphe.html#retournerVainqueurGraphe--"><code>Graphe.retournerVainqueurGraphe()</code></a>, 
<a href="../main/Condorcet.html#designerVainqueurRandomise-int:A-"><code>designerVainqueurRandomise(int[])</code></a>, 
<a href="../test/CondorcetTest.html#testElireLeVainqueur--"><code>CondorcetTest.testElireLeVainqueur()</code></a></dd>
</dl>
</li>
</ul>
<a name="toString--">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>toString</h4>
<pre>public&nbsp;java.lang.String&nbsp;toString()</pre>
<div class="block">Comportement d'un objet Condorcet sous la forme d'une chaine de caractère.<br>
 Retourne le vainqueur de l'élection et le nombre d'alternatives.<br></div>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>toString</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>Le vainqueur de l'élection et le nombre d'alternatives, sous la forme d'une chaine de caractères.</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../main/Condorcet.html" title="class in main"><code>Condorcet</code></a>, 
<a href="../main/Condorcet.html#nbAlternatives"><code>nbAlternatives</code></a>, 
<a href="../main/Condorcet.html#vainqueur"><code>vainqueur</code></a>, 
<a href="../test/CondorcetTest.html#testToString--"><code>CondorcetTest.testToString()</code></a></dd>
</dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/Condorcet.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev&nbsp;Class</li>
<li><a href="../main/Graphe.html" title="class in main"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?main/Condorcet.html" target="_top">Frames</a></li>
<li><a href="Condorcet.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
