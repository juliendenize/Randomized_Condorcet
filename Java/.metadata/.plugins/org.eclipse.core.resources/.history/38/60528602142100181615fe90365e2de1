import java.util.*;

/**
 * 
 * @author julien
 * Une instance de Condorcet représente une élection. 
 */
public class Condorcet {
	
	/**
	 * Le nombre d'alternatives
	 */
	private int nbAlternatives;
	
	/**
	 * Toutes les voix d'une élection
	 * @see Voix
	 */
	private LinkedList<Voix> toutesLesVoix;
	
	/**
	 * Comptabilise le nombre de fois qu'une Alternative est mieux classée qu'une autre dans les voix
	 * compteur[j][i] contient le nombre de fois que i est mieux classée que j 
	 */
	private int[][] compteur;
	
	/**
	 * Contient l'id du vainqueur de Condorcet
	 */
	private int vainqueur;
	
	/**
	 * Constructeur d'une instance de Condorcet
	 * @see Condorcet
	 * @param nbAlternatives Le nombre d'alternatives
	 */
	public Condorcet(int nbAlternatives) {
		this.nbAlternatives = nbAlternatives;
		this.compteur = new int[nbAlternatives][nbAlternatives];
		this.vainqueur = 0;
		this.toutesLesVoix = new LinkedList<Voix>();
	}
	
	/**
	 * Ajoute une voix à toutesLesVoix
	 * @see Voix
	 * @param voix est une instance de Voix
	 */
	public void addVoix(Voix voix) {
		this.toutesLesVoix.add(voix);
	}
	
	/**
	 * <b>Remplit le tableau compteur</b> en regardant pour chaque voix comment sont classées les alternatives pour matcher les candidats. <br>
	 * Elle parcourt les voix. <br>
	 * Elle parcourt pour chaque voix le tableau classement en <b>comparant pour chaque alternative i son rang par rapport aux alternatives j</b> avec j > i. <br>
	 * Lorsque que le <b>rang de i est supérieur au rang de j elle incrémente compteur[j][i] de 1</b>. <br>
	 * Si le rang de i ou de j est égale à 0, elle ne fait rien car cela signifie que l'<b>alternative égale à 0 n'a pas été classée par le votant</b>.
	 */
	public void parcoursVoix() {
		for (Voix cur: toutesLesVoix) {
			for (int i = 0; i < nbAlternatives - 1; i++) {
				if (cur.rangAlternative(i) != 0) {
					for (int j = i+1; j < nbAlternatives; j++) {
						if (cur.rangAlternative(j) != 0) {
							if (cur.rangAlternative(i) > cur.rangAlternative(j)) compteur[j][i] += 1;
							else compteur[i][j] +=1;
						}
					}
				}
			}
		}
	}
	
	/**
	 * Lit le tableau compteur.
	 */
	public void lectureCompteur() { // Pour lire le tableau compteur
		for (int i = 0; i < nbAlternatives; i++) {
			for (int j = 0; j < nbAlternatives; j++) {
				System.out.print(Integer.toString(compteur[i][j]) + " ");
			}
			System.out.print("\n");
		}
	}
	
	/**
	 * Retourne le vainqueur de l'élection et le nombre d'alternatives
	 */
	public String toString() { // A redéfinir la méthode toString pour Condorcet
		return "Election avec " + Integer.toString(nbAlternatives) + " alternatives et le gagnant est " + Integer.toString(vainqueur);
	}

}
