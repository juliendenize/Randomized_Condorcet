<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (1.8.0_161) on Tue May 22 12:30:05 CEST 2018 -->
<title>VoixAleatoire</title>
<meta name="date" content="2018-05-22">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
<script type="text/javascript" src="../script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="VoixAleatoire";
        }
    }
    catch(err) {
    }
//-->
var methods = {"i0":10};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/VoixAleatoire.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../main/Voix.html" title="class in main"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li><a href="../main/VoixAleatoirePonderee.html" title="class in main"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?main/VoixAleatoire.html" target="_top">Frames</a></li>
<li><a href="VoixAleatoire.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#fields.inherited.from.class.main.Voix">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">main</div>
<h2 title="Class VoixAleatoire" class="title">Class VoixAleatoire</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li><a href="../main/Voix.html" title="class in main">main.Voix</a></li>
<li>
<ul class="inheritance">
<li>main.VoixAleatoire</li>
</ul>
</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<br>
<pre>public class <span class="typeNameLabel">VoixAleatoire</span>
extends <a href="../main/Voix.html" title="class in main">Voix</a></pre>
<div class="block"><p><b>La classe VoixAleatoire représente la voix générée aléatoirement avec un idVotant pour la rendre unique.</b><br>
 Elle est une classe fille de Voix et est définie par:
 <ul>
        <li>L'ID du votant représenté par la voix.</li>
        <li>Le nombre d'alternatives du vote.</li>
        <li>Le rang des alternatives.</li>
 </ul>
 </p><br></div>
<dl>
<dt><span class="simpleTagLabel">Author:</span></dt>
<dd>julien</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../test/VoixAleatoireTest.html" title="class in test"><code>VoixAleatoireTest</code></a></dd>
</dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<ul class="blockList">
<li class="blockList"><a name="fields.inherited.from.class.main.Voix">
<!--   -->
</a>
<h3>Fields inherited from class&nbsp;main.<a href="../main/Voix.html" title="class in main">Voix</a></h3>
<code><a href="../main/Voix.html#idVotant">idVotant</a>, <a href="../main/Voix.html#nbAlternatives">nbAlternatives</a>, <a href="../main/Voix.html#rangAlternatives">rangAlternatives</a></code></li>
</ul>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><span class="memberNameLink"><a href="../main/VoixAleatoire.html#VoixAleatoire-int-int-">VoixAleatoire</a></span>(int&nbsp;idVotant,
             int&nbsp;nbAlternatives)</code>
<div class="block">Constructeur VoixAleatoire.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../main/VoixAleatoire.html#genererVoix--">genererVoix</a></span>()</code>
<div class="block"><b>Génère le rang de chaque alternative pour remplir le tableau rangAlternative.</b><br>
 La méthode crée un tableau pioche de taille (nbAlternatives + 1) avec pioche[i] = i.<br>
 Le tableau pioche permet de stocker les rangs qui n'ont pas encore été tirés.<br>
 Boucle for (pioche[0] = nbAlternatives; pioche[0] > 0; i++):
 
        Génère un nombre aléatoire compris dans l'intervalle [0, pioche[0]].
        On remplit rangAlternatives[pioche[0]-1] suivant le nbAleatoire:</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.main.Voix">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;main.<a href="../main/Voix.html" title="class in main">Voix</a></h3>
<code><a href="../main/Voix.html#retournerRangAlternative-int-">retournerRangAlternative</a>, <a href="../main/Voix.html#toString--">toString</a></code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="VoixAleatoire-int-int-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>VoixAleatoire</h4>
<pre>public&nbsp;VoixAleatoire(int&nbsp;idVotant,
                     int&nbsp;nbAlternatives)</pre>
<div class="block">Constructeur VoixAleatoire.
 <p>
        A la construction d'un objet Voix, l'idVotant et nbAlternatives sont fixées par le constructeur de la classe mère <a href="../main/Voix.html#Voix-int-int-"><code>Voix.Voix(int, int)</code></a>.<br>
        La génération de rangAlternatives est dans la méthode <a href="../main/VoixAleatoire.html#genererVoix--"><code>genererVoix()</code></a>.
 </p><br></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>idVotant</code> - L'ID du votant.</dd>
<dd><code>nbAlternatives</code> - Le nombre d'alternatives du vote.</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../main/Voix.html#Voix-int-int-"><code>Voix.Voix(int, int)</code></a>, 
<a href="../main/VoixAleatoire.html#genererVoix--"><code>genererVoix()</code></a></dd>
</dl>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="genererVoix--">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>genererVoix</h4>
<pre>public&nbsp;void&nbsp;genererVoix()</pre>
<div class="block"><b>Génère le rang de chaque alternative pour remplir le tableau rangAlternative.</b><br>
 La méthode crée un tableau pioche de taille (nbAlternatives + 1) avec pioche[i] = i.<br>
 Le tableau pioche permet de stocker les rangs qui n'ont pas encore été tirés.<br>
 Boucle for (pioche[0] = nbAlternatives; pioche[0] > 0; i++):
 <ul>
        <li>Génère un nombre aléatoire compris dans l'intervalle [0, pioche[0]].</li>
        <li>On remplit rangAlternatives[pioche[0]-1] suivant le nbAleatoire:
                        <p><b>si nbAleatoire = 0: 0</b>  et on perd donc le rang représenté par pioche[pioche[0]].<br>
                        <b>     si nbAleatoire = pioche[0]: pioche[nbAleatoire]</b>.<br>
                        <b>     sinon: pioche[nbAleatoire] et pioche[nbAleatoire] = pioche[pioche[0]]</b> afin de garder le rang qui n'a pas été tiré.<br></p>
                Dans le cas où nbAleatoire = 0 comme on décrémente ensuite pioche[0] on perd le rang représenté par pioche[pioche[0]]</li>
        </li>
 </ul>
 <br>
  A la fin de la méthode le classement est bien réalisé même si les nombres ne sont pas nécessairement consécutifs cela n'entraine pas de problème.<br></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../main/Voix.html#rangAlternatives"><code>Voix.rangAlternatives</code></a>, 
<a href="../main/Condorcet.html#parcourirLesVoix--"><code>Condorcet.parcourirLesVoix()</code></a></dd>
</dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/VoixAleatoire.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../main/Voix.html" title="class in main"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li><a href="../main/VoixAleatoirePonderee.html" title="class in main"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?main/VoixAleatoire.html" target="_top">Frames</a></li>
<li><a href="VoixAleatoire.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#fields.inherited.from.class.main.Voix">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
