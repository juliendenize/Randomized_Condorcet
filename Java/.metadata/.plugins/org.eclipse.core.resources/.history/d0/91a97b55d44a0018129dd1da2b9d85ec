<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (1.8.0_162) on Mon Apr 16 22:26:04 CEST 2018 -->
<title>Graphe</title>
<meta name="date" content="2018-04-16">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
<script type="text/javascript" src="../script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="Graphe";
        }
    }
    catch(err) {
    }
//-->
var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/Graphe.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../main/Condorcet.html" title="class in main"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li><a href="../main/Main.html" title="class in main"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?main/Graphe.html" target="_top">Frames</a></li>
<li><a href="Graphe.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">main</div>
<h2 title="Class Graphe" class="title">Class Graphe</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>main.Graphe</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<br>
<pre>public class <span class="typeNameLabel">Graphe</span>
extends java.lang.Object</pre>
<div class="block"><p><b>La classe Graphe représente le graphe orienté engendré par les résultats des matchs d'une instance de Condorcet.</b><br>
 Elle est définie par:
 <ul>
        <li>Le nombre de noeuds du graphe.</li>
        <li>La matrice d'adjancence du graphe.</li>
        <li>
 </ul>
 </p><br></div>
<dl>
<dt><span class="simpleTagLabel">Author:</span></dt>
<dd>julien</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../test/GrapheTest.html" title="class in test"><code>GrapheTest</code></a></dd>
</dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Field and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private int[][]</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../main/Graphe.html#matrice">matrice</a></span></code>
<div class="block">Représente la matrice d'adjacence du graphe orienté: si matrice[0][1] = 1 alors 1 pointe vers 0 sinon si matrice[0][1] = 0.<br>
 Cette matrice n'est pas modifiable.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../main/Graphe.html#nbNoeuds">nbNoeuds</a></span></code>
<div class="block">Nombre de noeuds du graphe.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><span class="memberNameLink"><a href="../main/Graphe.html#Graphe-int-int:A:A-">Graphe</a></span>(int&nbsp;nbAlternatives,
      int[][]&nbsp;compteur)</code>
<div class="block">Constructeur de Graphe</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>int[]</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../main/Graphe.html#compterNbMatchGagn%C3%A9s--">compterNbMatchGagnés</a></span>()</code>
<div class="block">Compte le nombre de match Gagnés pour chaque alternative et le nombre total de victoires.</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../main/Graphe.html#contientCycle--">contientCycle</a></span>()</code>
<div class="block"><b>Teste si le graphe contient un cycle en appliquant un parcous en profondeur pour chaque noeud.</b><br>
        Si on arrive à retourner sur le noeud de départ il y a un cycle.</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>private void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../main/Graphe.html#genererMatrice-int:A:A-">genererMatrice</a></span>(int[][]&nbsp;compteur)</code>
<div class="block"><b>Génère la matrice.</b><br>
 La méthode compare si pour chaque alternative i et j avec i != j, i a gagné plus de match par rapport à j.</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>int[][]</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../main/Graphe.html#retournerMatrice--">retournerMatrice</a></span>()</code>
<div class="block">Retourne la matrice.<br></div>
</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../main/Graphe.html#retournerVainqueurGraphe--">retournerVainqueurGraphe</a></span>()</code>
<div class="block"><b>Renvoie le vainqueur de Condorcet si il existe.</b><br>
 Si un candidat i bat tous les autres candidats j alors i est le vainqueur de Condorcet.<br></div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a name="nbNoeuds">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>nbNoeuds</h4>
<pre>private&nbsp;int nbNoeuds</pre>
<div class="block">Nombre de noeuds du graphe. Ce nombre n'est pas modifiable.</div>
</li>
</ul>
<a name="matrice">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>matrice</h4>
<pre>private&nbsp;int[][] matrice</pre>
<div class="block">Représente la matrice d'adjacence du graphe orienté: si matrice[0][1] = 1 alors 1 pointe vers 0 sinon si matrice[0][1] = 0.<br>
 Cette matrice n'est pas modifiable.</div>
</li>
</ul>
</li>
</ul>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="Graphe-int-int:A:A-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>Graphe</h4>
<pre>public&nbsp;Graphe(int&nbsp;nbAlternatives,
              int[][]&nbsp;compteur)</pre>
<div class="block">Constructeur de Graphe</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>nbAlternatives</code> - Le nombre d'Alternatives de l'élection que le graphe doit résoudre</dd>
<dd><code>compteur</code> - Le compteur des résultats des matchs sur toutes les voix de l'élection</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../main/Condorcet.html" title="class in main"><code>Condorcet</code></a></dd>
</dl>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="genererMatrice-int:A:A-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>genererMatrice</h4>
<pre>private&nbsp;void&nbsp;genererMatrice(int[][]&nbsp;compteur)</pre>
<div class="block"><b>Génère la matrice.</b><br>
 La méthode compare si pour chaque alternative i et j avec i != j, i a gagné plus de match par rapport à j.
 Lorsque c'est le cas on met un dans la matrice dans la case matrice[j][i].
 Si ils ont gagné autant de match on laisse à zéro.<br></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>compteur</code> - Le compteur de matchs passé au constructeur.</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../main/Graphe.html#Graphe-int-int:A:A-"><code>Graphe(int, int[][])</code></a></dd>
</dl>
</li>
</ul>
<a name="retournerMatrice--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>retournerMatrice</h4>
<pre>public&nbsp;int[][]&nbsp;retournerMatrice()</pre>
<div class="block">Retourne la matrice.<br></div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>La matrice du graphe sous forme d'un tableau à deux dimensions.</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../main/Graphe.html#matrice"><code>matrice</code></a>, 
<a href="../test/GrapheTest.html#testRetournerMatrice--"><code>GrapheTest.testRetournerMatrice()</code></a></dd>
</dl>
</li>
</ul>
<a name="retournerVainqueurGraphe--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>retournerVainqueurGraphe</h4>
<pre>public&nbsp;int&nbsp;retournerVainqueurGraphe()</pre>
<div class="block"><b>Renvoie le vainqueur de Condorcet si il existe.</b><br>
 Si un candidat i bat tous les autres candidats j alors i est le vainqueur de Condorcet.<br></div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>Renvoie le vainqueur de Condorcet si il existe sous la forme d'un entier. Si il n'existe pas renvoie 0.</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../test/GrapheTest.html#testRetournerVainqueurGraphe--"><code>GrapheTest.testRetournerVainqueurGraphe()</code></a></dd>
</dl>
</li>
</ul>
<a name="contientCycle--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>contientCycle</h4>
<pre>public&nbsp;boolean&nbsp;contientCycle()</pre>
<div class="block"><b>Teste si le graphe contient un cycle en appliquant un parcous en profondeur pour chaque noeud.</b><br>
        Si on arrive à retourner sur le noeud de départ il y a un cycle.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>Renvoie si il y a cycle sous forme de booléen, true si oui sinon non.</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../test/GrapheTest.html#testContientCycle--"><code>GrapheTest.testContientCycle()</code></a></dd>
</dl>
</li>
</ul>
<a name="compterNbMatchGagnés--">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>compterNbMatchGagnés</h4>
<pre>public&nbsp;int[]&nbsp;compterNbMatchGagnés()</pre>
<div class="block">Compte le nombre de match Gagnés pour chaque alternative et le nombre total de victoires. <br></div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>Renvoie un tableau d'entier contenant les matchs gagnés pour chaque alternative et le nombre total de matchs gagnés.</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../test/GrapheTest.html#testCompterNbMatchGagn%C3%A9s--"><code>GrapheTest.testCompterNbMatchGagnés()</code></a></dd>
</dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/Graphe.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../main/Condorcet.html" title="class in main"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li><a href="../main/Main.html" title="class in main"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?main/Graphe.html" target="_top">Frames</a></li>
<li><a href="Graphe.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
